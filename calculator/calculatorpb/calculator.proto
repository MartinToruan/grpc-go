syntax  = "proto3";

package calculator;
option go_package="calculatorpb";

message Calculator{
    int32 x = 1;
    int32 y = 2;
}

message CalculatorRequest {
    Calculator calculator=1;
}

message CalculatorResponse {
    int32 Result=1;
}

message PrimeNumberRequest{
    int32 value=1;
}

message PrimeNumberResponse{
    int32 result=1;
}

message ComputeAverageRequest{
    int32 value=1;
}

message ComputeAverageResponse{
    double result=1;
}

// Bidi Stream Message
message FindMaximumRequest{
    int32 value=1;
}

message FindMaximumResponse{
    int32 result=1;
}

// SquareRoot Message
message SquareRootRequest{
    int32 value=1;
}

message SquareRootResponse{
    double result=1;
}

service CalculatorService{
    // Unary
    rpc Calculate(CalculatorRequest) returns (CalculatorResponse){};

    // Server Stream
    rpc PrimeNumberDecomposition(PrimeNumberRequest) returns (stream PrimeNumberResponse) {};

    // Client Stream
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

    // BiDi Stream
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

    // SquareRoot
    // This API will return error INVALID_ARGUMENT if the request value is negative
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}